(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{"9TY6":function(e,n){e.exports={type:"image",mimeType:"image/png",src:"/assets/static/screen4.5ffd779.72f8d32c631d3a46165022eaca002d05.png",size:{width:877,height:401},sizes:"(max-width: 877px) 100vw, 877px",srcset:["/assets/static/screen4.82a2fbd.72f8d32c631d3a46165022eaca002d05.png 480w","/assets/static/screen4.5ffd779.72f8d32c631d3a46165022eaca002d05.png 877w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 877 401' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-43e3772e5d7c04cc2b57949e2fbd618f'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-43e3772e5d7c04cc2b57949e2fbd618f)' width='877' height='401' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAdCAIAAACVG/2gAAAACXBIWXMAAAsSAAALEgHS3X78AAAFvElEQVRYw9VYaXvaRhD2b%2b8PaPuh7dMmfZo4aeO4qe0YxxgfnAKhAwkMCIFAQicCCXGDkG2UjiQ7rqlz2aR1BrEso9VqZ2fenXd37e39xHXdxfvlwisuG7juZeOguFS%2bva%2bsvf1vBWxYbYdr9xxKnefXX%2b2xDZEqlNBcUVRa1UaTrQsNUeF4sVjh6FKFE2RBUgxrYJhWHCXD0RQvq9CgxoujyeyeVt3dAAgAKEtl5vGL7Sebuz%2bvb/749OWjP7bhevpy54cnL3/b2Pp1Y/unJxsvXkd%2b39oLJ7A0QX/3%2bPmzV7vf/rIO1zffP%2bJEzetqhQa4/xI/aoPKtSaoX0XywnHOAvF%2bz73InztnFz4CLi4unDPHnjvnF55MZza8Q1K0TtdSWh3Xn4h3r7hVHhYG7iAwJ1fQX0B9yaQbBsAM6YbZMS3D6kPZMbtMrV4oV3mpJatavSkLsgbRXKpyZKHMNaUiW2dqfKMpsRwPgS5rbUXTS2y93pSaklKocEyt4T8inzJVDlAhiKVqo1ytE4VynqmxdZ7lGkShVKzxaqsN/esdA5AjaW2za7U6Xa0NoxiYplll2VqtxnGc3u44jvNeA8D9HN%2bEjjhBCrrDqAKCU3ieqXCNfLmaK1YyBJ3C6SiCMRwP8EwTebh1ynIwLLrMUqfFoyRG5EsoSZ2kyYz/LJE/TeMUSpdwukgUGDJfPEZw6AqnC6A/QXAsX%2bZFOc9UBUnNlyp1Ue33Bx7KBVFUdcPoEDiWSCQxnNBarfl8/jWFEATMZDKBQQO%2boIR6sHh8HMSLa7wu/onjmwo3qAbLyGg87lrWdDabwtcrp2a3K8h6UzU1Y6h1Borea4h6rz/yFzF3cbUeLNzFHSG8Kg8ELxoOh6qihPffhEK7oVAoi%2bHdbpdmpP1j9NGzneebe%2bub4XRe0NrWCjPaKg0YDAaaqpIEjqJoJpPGCRLwl2eaKay09SYWiiDhKI6dCq0HaMC79W5m25fh5a1pCwik0RgCyjk7X9jOuT0/G44mkCIeBJX4CMP75wS7LqxvXwjlaysfOpS9fi%2bBUgcn8aN0bmN7P4nif%2b7HxlM7wO6DNuAqlhy23oQkBimQFyRJ05W2AQH24Dzw2UC8WhivH/ykpfKLGWAYhizLiqopiqK1NFVTBb4hSp5OFEVN0ySYfU9a0FKRZcvqQa6A29KVQDPIFf%2bHAf60wZhIgsjRdCaDZNBssVQmsGyFZakc6CiC9D8EDizGNHSKolWtZfV6LMtWmPJBJBKLRXO5XMcwv8h%2bwL0tWpaSpG3bHoV2nPNzjywDqYaKr4HKRXALSmg2Ho%2bhAlwANGNfpr4ANYByBR5YStsr3/h9AjQ%2bW5Y9YNvzwWjcGwyHozHMC9BgXpKNbt8AZts2rf6wPxwKsioqal1U6oIkKpqqt0W1pRtdeGQwHAGFVuCP1QMmC5uVrtXXOyYo1bbR0jvAtxtNmanWSzUeSLukasC3eUm9gwFBrrw2IPgDVDt36tF0qsQCxd%2bPIZFY6jCB0uVaLI0fp7KhSHTnMHEYS2ZpJl8sH8Qz0DiJUShJQ7M0Wdg7ih0hRCyd/evNMex9EZzO0qWTZGY/loZ6DCWTWfIgikCbFJ4Dov46Atmi%2bA5Rn%2buxZQ/0%2b/3TClflRdhEwJtSOBWOIntRJIZk41kqkkhHU9kMmYfRJLJkJJ6JZ7D9KEIWWRhi6DjhDTdXiGdze8fJnfAR2HOYyKSwHOjjaC5XKEbT2FYY9gj5cAx5HQFd0fHTs3vXkFv2QMcwqGIF3Fqp86S3DRPLleruUVxsGQBQGxj5OZAZgKFHeGBrC%2bgbT2fAEWaz%2bRRgOpnCNYHafD6z55PZzLR6EJOAVl8/gzDzn5pBGTS%2b817%2bdg8AlffD2mh1TFnVTQ8Nw6asTW0ncLK7aoi7d5VlDLw/Ibo3z95uOYT78Mnch8W9nyx7wA2umyzy4Z9ZfAXHKh%2bWvwGHKdn/fhAnqAAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}},BWsN:function(e,n){e.exports={type:"image",mimeType:"image/png",src:"/assets/static/screen3.ecb11dd.9a80dda088a7b3ce43c4e9f8846aa03c.png",size:{width:858,height:401},sizes:"(max-width: 858px) 100vw, 858px",srcset:["/assets/static/screen3.82a2fbd.9a80dda088a7b3ce43c4e9f8846aa03c.png 480w","/assets/static/screen3.ecb11dd.9a80dda088a7b3ce43c4e9f8846aa03c.png 858w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 858 401' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-b0bd9a016751a0beee3f6c291b31aa82'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-b0bd9a016751a0beee3f6c291b31aa82)' width='858' height='401' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAeCAIAAAATj48OAAAACXBIWXMAAAsSAAALEgHS3X78AAAE2ElEQVRYw%2b1YC1PiSBD2n98v2NuqdT1PT2vVW3e5K%2b/U83R1FUEBEZREkgDhEQjkwSOER0ISyAOvkyiiy6rno8S666KmOjPdw3zTPd09M3H%2bymni0TP0R9JgbFjiG%2bnzgeQLAngI4rGwgLuOuijuh6IVoVmrCel8UVG1VlsWWy25o7QlWWy2KzWhIohSp9NsSyBPszxBZimakRUVelqS/GIALMuClkgkfngzPbP8508Ln9/8vDjzcWV6aWVmyTP5wTO3vDK14Hk3/2l68fe1Hd%2b8Zy1bYN5/%2bPxu7uOPs7%2bC5NvZxV8867rpuNZzABjhu9c9G1pVVWGn2XK1yPIltszylRIHO94sMBzDV2r1Bl8RGK4Cbb7EgX1ydKlcqxdZzh%2bKRlEcI6nB5N/%2b9RNaoP86opBpkzXYAK3bhd2VZFk3DEVVO4qqGyb0g%2b/a7tuWqoLYljvQ35YkcHrTsmC02%2bvZvGmCrmyrGJZpdRQFOns9HbTEZgssA796o9Xr9UCz2W6783QUTdU0ey5VA5WursM8oCUIQq1WE8W64JBhGDcBXJ7IRgxLEOkcSpCpbJ7M5jb3/Gvb%2bweR%2bGkcD0RQfzi2tR/Y8gZ%2bW/9yjBLHCL7tC4ZP0dAJGogiwSgaPD75Y8u75Qv5g%2bHVbd/G3sGmN%2bAPn2zuAh84OI598QUD0di6PRTYDUZ2/Yd/fT1YXt2MEekoEo/Gk1iKPAyfRFACHA9LZc8SJJwcoVY98Pu8Xm8gEOT4clfTRlsAYAC4nm4AaMcYlt2YpqZ1DcPUdQN2F3gQgCHYV5DXnU0CDloY7XZ7sIWOsK7aWgZYQHfk3b20DWJZhqMCYiAPswE5HX3LJtv4rjFBGr7BEURRrFQqHM/VatXRFrj9HN8%2b1Hd//WtDqgorsyDC6KYFjKJ2u139mtZwvhtMeEc4GbGeJ05k7txgIyRZ2gugf%2b8ebXkje0E0hGRzdPk5osGzZGLwnXia96zuvJmcm5xdfju14D1K5JnadTuNMQDw%2bRxdgbNXLDeKfIMqVkmK46vieBZzr74aHUGmoUcQjGZ4mi2T2TxFl9iK0GhJT17JPQMAZ316T1vf2YdcsbS6/X7%2bEwT7qaWVDW/QxuZUUOMIYFAouZ8QqvtDsRLSrCQrY2cBTdMURbFzlqIAr1%2bkJFM3nDxoGFDqgUDHGQXqAA6HZFmWJAmSGBDwIPsyACBBZtJkMBhIJJIllodaJYFjOJGkCwUcw1LpjHXpME4OGqpZ6nWOY0%2bjkUMoDThe6XQebJxHAYB1ULksgkCWorhyudlsFPJ54FmGAQyJZKpjF3BQX1yRYygdKjOGYQgcOzuLMywLNnkCAFB9uIWIdUV9ux662Wl/Dxzdtb7p1rGO5MV%2buwnhFurpbg0C7GMOxsSNe%2bqNkuY%2b1/iL%2buuCv%2bq07lqWq3re/867wD1oyAJ9i%2bH4FFWEWyyZK5AUjaUyuUIxGEWIDNVothA8hRCpCIqjeJLMl0a%2bRnz3ieJ%2bS3nAW8g1ALDgoxgOl0MET2LJDJpIw5XPf3QSPSPgbpjM5nM0k6HoDFUoctXnCIiPBZDOUcdniRJXRrDErj%2bEpakwgseT6Y2vfqEpvfiK7wAw8OPLwNe3LiV051LiHN7BWbX640Gjw%2bjwu9ogfv%2b3irn/AfwL%2bgc9SdzvZRd8RAAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}},IDXt:function(e,n){e.exports={type:"image",mimeType:"image/png",src:"/assets/static/screen1.92f7e5b.0632c317bd19f32f96a20d35da92d7bd.png",size:{width:554,height:358},sizes:"(max-width: 554px) 100vw, 554px",srcset:["/assets/static/screen1.92f7e5b.0632c317bd19f32f96a20d35da92d7bd.png 554w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 554 358' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-68c17a6742c3514fc71fd398bb01eecd'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-68c17a6742c3514fc71fd398bb01eecd)' width='554' height='358' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAApCAIAAAAK8LgbAAAACXBIWXMAAAsSAAALEgHS3X78AAAJbklEQVRYw%2b1ZWW9bxxXWTygsR%2bK%2bXPLeS15uEvd9ESVKorjvpChRlLhIokVLsh24iRO7SfvgAkGXtAiQ1xZN0SJ96EtR9EcU6C/oP3G/O0MyFC2nsiw6LxE%2bDA7nzh3OOec7y4gLHG/mebOWtVgMXGyVYfQCy1swyWLeYOHFkQgEdBJP3zPwvTKdVa6zQtazglrDsZxAHy3giDrO4jJz//6F59VfU79u8irGKAhWo2BjdAas1umNjI6HDBiMVnxkfwgFHsVV53G1njWt2t3pdM5kXmU5k6iAwWCWMyvtqOzV31Ov/jX470udQavZTFcvLy9TO7l6vVmuNOr1/Xyp3u2dDgbDem1XECwsN9p64pw5wWi0KPW2vaDun617/9i/X3GrS83O808/yeVKag2LBaIHGM7qNun%2b88L06pu1L8sfKBjLWjyRLdQK%2bVKxXMvny/VGq17fS6XzxWK1UqmbTTY90Z7jzHCITm%2bYH/R6g1pndJrYr3OLX2UXHUY2Gt/u9499/jC%2bWlRgHANWi4GP2dQMa4W/dDoD9NPCGYwBo0bDabS8luG1Wh7CxPwgmGCyCcJ8YRJsrMFmMNqMwgrDmsFnkEc8PY2BERNwGt6iZm08T0zLWwxGyyxJeAs/zUtOAPyBGODzRydjILj2PfAHpmXybiDmDYzkCXxj4BHgI4sDobjVakcokrwyOsYC1LodENC8wYRDuz2hYCjucgd9gShGu93rcPrsDr/TFXQ4fJBXHV5RdvoBpytgd/rtmHf4XJ6Q1xdx%2bSI%2bb9jhj07g9Ecx6SHzfm845AmFyEqfP2a22GF%2bwbQ6OcbCVQO/BcQkwAk48eZW%2bvzislbfK5YajWa7uX%2b0d3B83DtOpwuN5mFj73B39yCdyldr%2bxDK1WZzt1VvHLS7w1Iuv%2bIJfcGw30rkHxrMn3DCszE%2b5oSPOOGnnPCUN2F8aLRCGTjEbFkBvQ0G6%2bTYC7dPbcjEnADzr28kT04GuXwlky3X6vvtzqDV7ve6/UKhUm%2b0m61ur3uSShdare5Bu1ertw4Pu73%2boNI4yqYyDk94yxXI2b0BXyQEY48R9IYDxPyAzxfxEvhFBVYRA9O1aGGG08SuCANxZEUIb4KeNQKUQh5vGK6A4CJUcYIkTr/LHXK6RNnhgBx0Ev5AcDgDdI3LIx4OnLEHYm7sMw0fEHETIlGMFVjRMpx4vFGsjhXAgeQKLaBQaJalqp8sqyRSFeTxJIGSoR8ppDK1WqODAtQ8EN4Ef%2bA72XvlEXmRwHsDQAGjYJVIlfh2hhn5gSoAQgsyuUYqVS0r2GQs%2bbLbCfvXP5AxMpkamtxfki/el91blGLNBJhXqXWT5DNJR/MDEhcUWFqWS2Ua%2bGFWAalMpVCxz4/7f/7NZ8Pff/q3X30%2bbO4tSdUsK7hcvnB0fTuZUSi1MwpgX/CHsgjjtEMw4/WJZv7O/Hg0EcZO897M/NQDSO6wKTwwqwAYvyRRmM3uv/zyhfXpQJIsRT%2b7%2bNPPnslURtuqp1qtV2u72WxRqRSZQxQQBZWawb7IoaHwOh3BbzEzgvGuAL6PxgYND8yIQUIeITxIhIghcXMdRAUMFq2WU6p0Gu11Clgsnm9ePuefnCjjec/zh3988ZFaZ5ErqL2Vou/kGo2GlZPYWJaoYAacKbGVKpXryELtwz7QaLQODnrlym5j96DbGyAvHXVOkju5Tvc0ky3lC9V2u4fepFrb2222%2b8dnlWrzhmqMFGCuUwAUIpTgvrgY/uF3nzd/%2b/G3X/78Wa9zf1klWOyBQCgYDLp8IafT4/EFV2wOCN5AxIk/V3BjYweZNBrbTGeK%2bUJtI7GTzZV3Uvm1%2bBay585OHvJGIlUu78bWxJlisZ5KFTAJZaAS3n0rCsnlmmsoRINYzDwaoZEqfXX%2bILOelig4hLVCqVOp9SqVTq3lRO3Veo2WhQHwkdFxlOsUJEX64ROHmEODlDCUM3RyikKjefro5goYjdalJQSxWns1C5E0SjSTy9WLEuU9iea%2bRCnOgO4ytXQKYrIi47JEoVIx1PWT8RZ4qyCGAhJysJk0SltLsTBBE/RzBt6EEfmHTArsDGghQ6/LGqbT6E2O%2by7ZFmkUhQz%2bHxXcmUoshvLbgOxipLYBDdyjfutKcpzI05Mg25vWjBdErnp1lJRJM7dKulHrNa3ELXohKICtkRARuIhF2lZQiuO7YTCEuGscCQAOQbMtUThIwkbMpx4vEHG7R8GAFzFin0mHAtD2Gx54Yy90KwUEfEcoHH/0%2bEm11ux0TpBGB4PzwYNzpE7kR6TOo85p66B7fHK23%2br0%2bw/Qzx0e9tHMDR8%2bqlT3kE/Phpe4rKYzpdPT85PTh5AfPX7abLbPzi5xm8XKwdkF9mzuHUKr72vmbqcAbBOPb29upWCqSDRBEyUcAhnGRvaMr28jn25sJNc3dqJrm%2bHIBmyJGXgsHFnf2s6KKTiaQL%2b0Ft%2bOryfpiDXFUp28ux2NidtiQ3j47hWAB7A1ugx6epc7NKKv2EdEKAFEWnvCLkIJ3MiobrTvoBTHMkobyjTI2AqORW3BJHQA67Dz/2mnb3Mf4AX0DvlC5fGTD0GYk9MhmAOeHJ8MwaVWqwMrgjwoukdHx53O8d7%2bUZtQqHXQ6fUfgC3FUg2voGB3u6dg4ODBRancAM4vnoBsw%2bEjVGs8xUdUesTJPCgUBh9AVuro7WQW/NncyoAG4Aw4gCYCM4nN9HYyh0lKBpgW9ziYFjIeJXfyiUQKfCsUa5gnTzN4K7a2iQVgXWIzhcXzoJCRJjiaYUihDdGkMcF0SaZNK1kZHq%2bkiehKwzedfMbrRfnuKQRMytN0nZq5JFz5d8Mbqhu995A1VzZ8rZDdtQJ%2b/3wvMfNWgFIIlTg8aekmoEX32hnKDbFseUW8vmBSs2d6obv3AC2cCFZkOuR1ZPRQKO4PrkViCcoEzANYg9SJETLiEvGN0MQC8ihGH1GOTf/PixaNiRpzUYDWgUy2uL6xjfsAbgLIJJlsGR0/TplKizNIpshFAB7RdAQBOQdVDFcCLACQJZGgsANAFuczmVKhUINF5qqAke6LooPgozI14YS1fjqS0ISlsYYsjo1eDMVpiaWFbNr88MxMvz0XD9B0MXMZIHf5a1v/6MxizLz2cYRrg9hivUsFxAvDqt3z3mB3eI2CFVcU0s%2b/swLUCTrxlxv%2bvYGc/soZFt7xx595/0LzOu5YgR8cPyrwowLviP8BCIw9Gz7ZYxsAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}},UQSp:function(e,n,t){"use strict";n.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},"Y/cd":function(e,n,t){"use strict";t.r(n);var a=t("KHd+"),o=t("UQSp"),r=t("Kw5r");function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.a.config.optionMergeStrategies;var i={VueRemarkRoot:o.a},c=function(e){var n=e.options.components=e.options.components||{},t=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===s(i[e])&&"function"==typeof i[e].render||"function"==typeof i[e]&&"function"==typeof i[e].options.render?n[e]=i[e]:t[e]=function(){return i[e]}}))},p=r.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",d={excerpt:null,title:"Lección 6.1, Crear dApps IoT para usuarios finales",contributors:["vol4tim"],translated:!1};var u=function(e){e.options[l]&&(e.options[l]=d),r.a.util.defineReactive(e.options,l,d),e.options.computed=p.computed({$frontmatter:function(){return e.options[l]}},e.options.computed)},b=Object(a.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("VueRemarkRoot",[a("h2",{attrs:{id:"getting-ready"}},[a("a",{attrs:{href:"#getting-ready","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Getting ready")]),a("h3",{attrs:{id:"robonomics-node-launch"}},[a("a",{attrs:{href:"#robonomics-node-launch","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Robonomics node launch")]),a("p",[e._v("For dApp development and testing, we will use a local Robonomics node. To do this, you need to download the compiled binary file "),a("a",{attrs:{href:"https://github.com/airalab/robonomics/releases",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/robonomics/releases")]),e._v(". I will be using Ubuntu, so I download the appropriate version.")]),a("p",[e._v("Unpack the archive")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("wget https://github.com/airalab/robonomics/releases/download/v0.24.0/robonomics-ubuntu-0.24.0-x86_64.zip\nunzip robonomics-ubuntu-0.24.0-x86_64.zip\ncd robonomics-ubuntu-0.24.0-x86_64\nchmod +x robonomics\n")])]),a("p",[e._v("Now we can start the node in development mode. To do this, use the --dev flag")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("./robonomics --dev\n")])]),a("blockquote",[a("p",[e._v("Troubleshooting")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("./robonomics purge-chain --dev\n")])])]),a("h3",{attrs:{id:"browser-extension"}},[a("a",{attrs:{href:"#browser-extension","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Browser extension")]),a("p",[e._v("To store keys in a browser, there is a "),a("code",{pre:!0},[e._v("polkadot{.js} extension")]),e._v(". In dApp we will use it to sign transactions.")]),a("p",[e._v("The extension is currently available for "),a("code",{pre:!0},[e._v("Google chrome")]),e._v(" and "),a("code",{pre:!0},[e._v("Firefox")]),a("a",{attrs:{href:"https://polkadot.js.org/extension/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://polkadot.js.org/extension/")])]),a("p",[e._v("After installing the extension, create a new account.\n"),a("g-image",{attrs:{src:t("IDXt"),alt:"screen1"}})],1),a("blockquote",[a("p",[e._v("The first step is completed.")])]),a("h2",{attrs:{id:"dapp-development"}},[a("a",{attrs:{href:"#dapp-development","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("DApp development")]),a("h3",{attrs:{id:"step-1"}},[a("a",{attrs:{href:"#step-1","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Step 1")]),a("blockquote",[a("p",[e._v("We will write the dApp using the vue.js framework, although you can use whatever you like/can.")])]),a("p",[e._v("Let's start developing the dApp by creating a startup application with vue.js And here you can do it in two ways.")]),a("p",[e._v("Way 1:")]),a("p",[e._v("Using the "),a("code",{pre:!0},[e._v("Vue cli")]),e._v(" console utility.\nTo do this, you need to install it "),a("a",{attrs:{href:"https://cli.vuejs.org/guide/installation.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://cli.vuejs.org/guide/installation.html")])]),a("p",[e._v("After installation, you can run the command in the terminal")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("vue create mydapp\n")])]),a("p",[e._v("Answer a few questions of the setup wizard. We will be using version Vue 2, so we keep the default version "),a("code",{pre:!0},[e._v("Default ([Vue 2] babel, eslint)")]),e._v(".")]),a("p",[e._v("Way 2:")]),a("p",[e._v("Clone the prepared git repository with the example and switch to step 1")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("git clone https://github.com/airalab/example-robonomics-dapp.git mydapp\ncd mydapp\ngit checkout step-1\n")])]),a("p",[e._v("As a result, we will get a directory with the installed startup application, which can already be launched and opened in the browser.")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("yarn\nyarn serve\n")])]),a("h3",{attrs:{id:"step-2-getting-started-with-polkadotjs"}},[a("a",{attrs:{href:"#step-2-getting-started-with-polkadotjs","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Step 2. Getting started with polkadot.js")]),a("h4",{attrs:{id:"installing-dependencies"}},[a("a",{attrs:{href:"#installing-dependencies","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Installing dependencies")]),a("p",[e._v("To connect the dApp to the Robonomics chain, there is the "),a("code",{pre:!0},[e._v("@polkadot/api")]),e._v(" library. And for interaction of dApp with an extension with keys, we have the "),a("code",{pre:!0},[e._v("@polkadot/extension-dapp")]),e._v(" library. We need to install them into our application.\nMore details on using this library can be found in the documentation "),a("a",{attrs:{href:"https://polkadot.js.org/docs/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://polkadot.js.org/docs/")]),e._v(".")]),a("p",[e._v("Way 1:")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("yarn add @polkadot/api @polkadot/extension-dapp\n")])]),a("p",[e._v("You also need to add the "),a("code",{pre:!0},[e._v("vue.config.js")]),e._v(" file to support "),a("code",{pre:!0},[e._v("mjs")]),e._v(" extension.")]),a("p",[a("code",{pre:!0},[e._v("vue.config.js")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('module.exports = {\n  publicPath: "",\n  configureWebpack: {\n    resolve: {\n      extensions: ["*", ".mjs", ".js", ".vue", ".json", ".gql", ".graphql"]\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.mjs$/,\n          include: /node_modules/,\n          type: "javascript/auto"\n        }\n      ]\n    }\n  }\n};\n')])]),a("h4",{attrs:{id:"connecting-to-robonomics"}},[a("a",{attrs:{href:"#connecting-to-robonomics","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Connecting to Robonomics")]),a("p",[e._v("First, let's create a configuration file with the parameters for connecting to the Robonomics node. In the demo repository, there is an example of this file "),a("code",{pre:!0},[e._v("config.template.json")]),e._v(".")]),a("p",[a("code",{pre:!0},[e._v("src/config.json")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-json"}},[e._v('{\n  "endpoint": "ws://localhost:9944",\n  "types": {\n    "Record": "Vec<u8>",\n    "Parameter": "Bool",\n    "Address": "AccountId",\n    "LookupSource": "AccountId"\n  }\n}\n')])]),a("p",[e._v("In this file, we indicate the node, which we are going to connect to, and custom types. The types for Robonomics can be taken from github "),a("a",{attrs:{href:"https://github.com/airalab/robonomics/blob/master/bin/node/cli/res/custom_types.json",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/robonomics/blob/master/bin/node/cli/res/custom_types.json")])]),a("p",[e._v("Now we need to write a script to connect to our running node.")]),a("p",[a("code",{pre:!0},[e._v("src/utils/api.js")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('import { ApiPromise, WsProvider } from "@polkadot/api";\nimport config from "../config.json";\n\nlet api;\nexport async function initApi() {\n  const provider = new WsProvider(config.endpoint);\n  api = await ApiPromise.create({\n    provider,\n    types: config.types\n  });\n  return api;\n}\n\nexport function getApi() {\n  return api;\n}\n')])]),a("p",[e._v("So that we can sign transactions with the key from the extension, let’s add two functions for connecting to the extension and the function for initializing the account.")]),a("p",[a("code",{pre:!0},[e._v("src/utils/api.js")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('...OTHER_CODE...\n\nimport {\n  web3Accounts,\n  web3Enable,\n  web3FromAddress\n} from "@polkadot/extension-dapp";\n\nasync function getExtension() {\n  const extensions = await web3Enable("demo");\n  if (extensions.length === 0) throw new Error("no extension");\n  return extensions[0];\n}\n\nexport async function initAccount(index = 0) {\n  const timeout = new Promise(resolve => {\n    setTimeout(resolve, 300);\n  });\n  await timeout;\n  await getExtension();\n  const accounts = await web3Accounts();\n  if (accounts.length > 0) {\n    const injector = await web3FromAddress(accounts[index].address);\n    api.setSigner(injector.signer);\n    return accounts[index].address;\n  }\n  throw new Error("no accounts");\n}\n\n...OTHER_CODE...\n')])]),a("p",[e._v("Our account will have a zero balance, while we need a little funds. So we need to create another faucet function. As we launched Robonomics with the "),a("code",{pre:!0},[e._v("--dev")]),e._v(" flag, we have "),a("code",{pre:!0},[e._v("Alice")]),e._v(" account with a large balance, so we will request funds from there.")]),a("p",[a("code",{pre:!0},[e._v("src/utils/api.js")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('...OTHER_CODE...\n\nimport { Keyring } from "@polkadot/keyring";\n\nexport function getBalance(account, cb) {\n  api.query.system.account(account, ({ data: { free: currentFree } }) => {\n    cb(currentFree);\n  });\n}\n\nexport const keyring = new Keyring({ type: "sr25519" });\n\nexport async function faucet(address) {\n  keyring.setSS58Format(api.registry.chainSS58);\n  const account = keyring.addFromUri("//Alice");\n  const tx = api.tx.balances.transfer(address, 1000000000000000);\n  await tx.signAndSend(account);\n}\n\n...OTHER_CODE...\n')])]),a("p",[e._v("The full version of script "),a("a",{attrs:{href:"https://github.com/airalab/example-robonomics-dapp/blob/master/src/utils/api.js",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/example-robonomics-dapp/blob/master/src/utils/api.js")])]),a("p",[e._v("Run app")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("yarn serve\n")])]),a("p",[e._v("Way 2:")]),a("p",[e._v("If you start the application with cloning the repository, then in order to complete these steps, it will be enough to switch to step 2 and install the rest of the dependencies.")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("git checkout step-2\ncp src/config.template.json src/config.json\nyarn\nyarn serve\n")])]),a("h3",{attrs:{id:"step-3-vue-connecting-component"}},[a("a",{attrs:{href:"#step-3-vue-connecting-component","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Step 3. Vue connecting component")]),a("h4",{attrs:{id:"connecting"}},[a("a",{attrs:{href:"#connecting","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Connecting")]),a("p",[e._v("We have already written a script for connecting. Now we can use it on our interface. It is enough to call the written "),a("code",{pre:!0},[e._v("initApi")]),e._v(" function in  the root component "),a("code",{pre:!0},[e._v("App.vue")]),e._v(". And while the user is waiting for a connection, we will show him a small loader, for now in the form of an ellipsis.")]),a("p",[e._v("Way 1:")]),a("p",[e._v("Component template and base styles.")]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<template>\n  <div id="app">\n    <h1>Robonomics dApp</h1>\n    <div v-if="load">...</div>\n    <template v-else>\n      <div v-if="error" class="error">{{ error }}</div>\n      <template v-else-if="api">\n        connected\n      </template>\n    </template>\n  </div>\n</template>\n\n...OTHER_CODE...\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nbutton {\n  font-size: 14px;\n  padding: 5px 12px;\n}\nbutton:hover {\n  cursor: pointer;\n}\ninput {\n  font-size: 14px;\n  padding: 5px;\n}\nselect {\n  font-size: 14px;\n  padding: 5px;\n}\nbutton:focus,\ninput:focus {\n  outline: none;\n}\n.error {\n  color: rgb(151, 31, 31);\n  font-weight: bold;\n  text-align: center;\n  margin: 10px 0;\n}\n</style>\n')])]),a("p",[e._v("There is the component code where the  "),a("code",{pre:!0},[e._v("initApi")]),e._v(" function will be called")]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<script>\nimport { initApi } from "./utils/api";\n\nexport default {\n  name: "App",\n  data() {\n    return {\n      load: false,\n      api: null,\n      error: null\n    };\n  },\n  created() {\n    this.init();\n  },\n  methods: {\n    async init() {\n      try {\n        this.load = true;\n        this.api = await initApi();\n        this.load = false;\n      } catch (error) {\n        this.error = error.message;\n        this.load = false;\n      }\n    }\n  }\n};\n<\/script>\n')])]),a("h4",{attrs:{id:"account-with-balance"}},[a("a",{attrs:{href:"#account-with-balance","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Account with balance")]),a("p",[e._v("Now we can use our account, top up its balance and show it on the interface.")]),a("p",[e._v("Let’s add the appropriate markup to the template")]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<template>\n\n  ...OTHER_CODE...\n\n    <template v-else>\n      <div v-if="error" class="error">{{ error }}</div>\n      <template v-else-if="api && account">\n        <p>\n          Account: <b>{{ account }}</b> {{ balance }} |\n          <button @click="faucet">\n            faucet\n          </button>\n        </p>\n      </template>\n    </template>\n\n  ...OTHER_CODE...\n\n</template>\n')])]),a("p",[e._v("Let’s add new fields for account address and balance")]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v("...OTHER_CODE...\n\ndata() {\n  return {\n\n    ...OTHER_CODE...\n\n    account: null,\n    balance: 0,\n\n    ...OTHER_CODE...\n\n  };\n}\n\n...OTHER_CODE...\n")])]),a("p",[e._v("We need to add the account initialization to the "),a("code",{pre:!0},[e._v("init")]),e._v(" function and get its balance")]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<script>\nimport { initApi, initAccount, getBalance, faucet } from "./utils/api";\nimport { formatBalance } from "@polkadot/util";\n\n...OTHER_CODE...\n\nasync init() {\n\n  ...OTHER_CODE...\n\n  this.api = await initApi();\n  this.account = await initAccount();\n  getBalance(this.account, balance => {\n    this.balance = formatBalance(balance);\n  });\n\n  ...OTHER_CODE...\n\n}\n\n...OTHER_CODE...\n<\/script>\n')])]),a("p",[e._v("It remains to add the function of replenishing the balance, when clicking on the button")]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v("...OTHER_CODE...\n\n  methods: {\n    faucet() {\n      faucet(this.account);\n    },\n\n...OTHER_CODE...\n")])]),a("p",[a("a",{attrs:{href:"https://github.com/airalab/example-robonomics-dapp/blob/step-3/src/App.vue",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/example-robonomics-dapp/blob/step-3/src/App.vue")])]),a("p",[e._v("Run app")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("yarn serve\n")])]),a("p",[e._v("Way 2:")]),a("p",[e._v("If you start the application with cloning the repository, then to complete these steps, you will just need to switch to step 3.")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("git checkout step-3\nyarn serve\n")])]),a("p",[e._v("As a result we will get this picture in the browser")]),a("p",[a("g-image",{attrs:{src:t("gSOe"),alt:"screen2"}})],1),a("h3",{attrs:{id:"step-4-datalog"}},[a("a",{attrs:{href:"#step-4-datalog","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Step 4. Datalog")]),a("p",[e._v("To save and read any data in the chain, we use the "),a("code",{pre:!0},[e._v("datalog")]),e._v(" module.")]),a("p",[e._v("For an example of how to use this module, let's make a "),a("code",{pre:!0},[e._v("Datalog.vue")]),e._v(" component.")]),a("p",[e._v("Way 1:")]),a("p",[e._v("In the markup, we will have a button for reading data "),a("code",{pre:!0},[e._v("read")]),e._v(" with a block, where we will display a list in the form of a date and the data itself. And there will be a form with a text input, into which you can enter any data in the form of a string, and a "),a("code",{pre:!0},[e._v("write")]),e._v(" button.")]),a("p",[a("code",{pre:!0},[e._v("src/components/Datalog.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<template>\n  <div>\n    <h2>Datalog</h2>\n    <button @click="read">read</button> |\n    <input v-model="data" :disabled="isWrite" />\n    <button @click="write" :disabled="isWrite">write</button>\n    <div v-if="error" class="error">{{ error }}</div>\n    <div v-if="log" class="log">\n      <p v-if="log.length === 0" class="error">Not found</p>\n      <div v-for="(item, k) in log" :key="k" class="row">\n        date: <b>{{ item[0] | dateFormat }}</b>\n        <br />\n        data: <b>{{ item[1] | dataFormat }}</b>\n      </div>\n    </div>\n  </div>\n</template>\n\n...OTHER_CODE...\n\n<style scoped>\n.log {\n  border: 1px solid #eee;\n  text-align: left;\n  width: 800px;\n  margin: 20px auto;\n}\n.log .row {\n  margin: 10px;\n}\n</style>\n')])]),a("p",[e._v("Component code. Here the main point in sending a transaction is to call the function, into which we transfer data and which we sign with our account, via api "),a("code",{pre:!0},[e._v("this.api.tx.datalog.record(stringToHex(this.data)).signAsync(this.account);")])]),a("p",[a("code",{pre:!0},[e._v("src/components/Datalog.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<script>\nimport { stringToHex, u8aToString } from "@polkadot/util";\n\nexport default {\n  props: ["api", "account"],\n  data() {\n    return {\n      data: "data string",\n      log: null,\n      isWrite: false,\n      error: ""\n    };\n  },\n  filters: {\n    dateFormat: function(v) {\n      return new Date(Number(v)).toLocaleString();\n    },\n    dataFormat: function(v) {\n      return u8aToString(v);\n    }\n  },\n  methods: {\n    async read() {\n      this.log = (await this.api.query.datalog.datalog(this.account)).toArray();\n    },\n    async write() {\n      try {\n        this.error = "";\n        this.isWrite = true;\n        const tx = await this.api.tx.datalog\n          .record(stringToHex(this.data))\n          .signAsync(this.account);\n        await tx.send(result => {\n          if (result.status.isInBlock) {\n            this.read();\n            this.isWrite = false;\n          }\n        });\n      } catch (error) {\n        this.error = error.message;\n        this.isWrite = false;\n      }\n    }\n  }\n};\n<\/script>\n')])]),a("p",[a("a",{attrs:{href:"https://github.com/airalab/example-robonomics-dapp/blob/master/src/components/Datalog.vue",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/example-robonomics-dapp/blob/master/src/components/Datalog.vue")])]),a("p",[e._v("To switch between components, added to "),a("code",{pre:!0},[e._v("App.vue")]),e._v(" the output of our component")]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('...OTHER_CODE...\n\n<template v-else-if="api && account">\n  <p>\n    Account: <b>{{ account }}</b> {{ balance }} |\n    <button @click="faucet">faucet</button>\n  </p>\n\n  <div>\n    <div class="tabs">\n      <button\n        @click="tab = \'datalog\'"\n        :class="{ active: tab === \'datalog\' }"\n      >\n        datalog\n      </button>\n    </div>\n    <Datalog v-if="tab === \'datalog\'" :api="api" :account="account" />\n  </div>\n</template>\n\n...OTHER_CODE...\n\n<script>\nimport Datalog from "./components/Datalog";\n\n...OTHER_CODE...\n\nexport default {\n  name: "App",\n  components: {\n    Datalog\n  },\n  data() {\n    return {\n      tab: "datalog"\n\n...OTHER_CODE...\n<\/script>\n\n<style>\n...OTHER_CODE...\n\n.tabs button {\n  font-size: 14px;\n  padding: 10px 20px;\n  font-weight: bold;\n  background: #ececec;\n  border: 1px solid #aaa;\n}\n.tabs button:hover {\n  background: #bfbfbf;\n}\n.tabs button:last-child {\n  border-left: none;\n}\n.tabs button.active {\n  background: #ced5e2;\n}\n</style>\n')])]),a("p",[e._v("Run app")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("yarn serve\n")])]),a("p",[e._v("Way 2:")]),a("p",[e._v("If you start the application with cloning the repository, then to complete these steps, you will just need to switch to step 4.")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("git checkout step-4\nyarn serve\n")])]),a("p",[e._v("As a result we will get this picture in the browser")]),a("p",[a("g-image",{attrs:{src:t("BWsN"),alt:"screen3"}})],1),a("h3",{attrs:{id:"step-5-launch"}},[a("a",{attrs:{href:"#step-5-launch","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Step 5. Launch")]),a("p",[e._v("This function is used to start and stop the robot. To demonstrate how to use this module, let's write the "),a("code",{pre:!0},[e._v("Launch.vue")]),e._v(" component.")]),a("p",[e._v("Way 1:")]),a("p",[e._v("In the component template, we will have a form where you can specify the address of the robot, the ON/OFF clicker and the button for sending.")]),a("p",[a("code",{pre:!0},[e._v("src/components/Launch.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<template>\n  <div>\n    <h2>Launch</h2>\n    <input v-model="robot" :disabled="isWrite" placeholder="Robot address" />\n    <select v-model="parameter" :disabled="isWrite">\n      <option value="ON">ON</option>\n      <option value="OFF">OFF</option>\n    </select>\n    <button @click="launch" :disabled="isWrite">launch</button>\n    <div v-if="error" class="error">{{ error }}</div>\n    <div v-if="log.length > 0" class="log">\n      <div v-for="(item, k) in log" :key="k" class="row">\n        sender: <b>{{ item.sender }}</b>\n        <br />\n        robot: <b>{{ item.robot }}</b>\n        <br />\n        parameter: <b>{{ item.parameter ? "ON" : "OFF" }}</b>\n      </div>\n    </div>\n  </div>\n</template>\n\n...OTHER_CODE...\n\n<style scoped>\n.log {\n  border: 1px solid #eee;\n  text-align: left;\n  width: 800px;\n  margin: 20px auto;\n}\n.log .row {\n  margin: 10px;\n}\n</style>\n')])]),a("p",[e._v("The code looks like the "),a("code",{pre:!0},[e._v("Datalog.vue")]),e._v(" component. The difference is just in reading. The robot will receive the command through events.")]),a("p",[a("code",{pre:!0},[e._v("src/components/Launch.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<script>\nexport default {\n  props: ["api", "account"],\n  data() {\n    return {\n      robot: this.account,\n      parameter: "ON",\n      log: [],\n      isWrite: false,\n      error: "",\n      unsubscribe: null\n    };\n  },\n  async created() {\n    this.unsubscribe = await this.api.query.system.events(events => {\n      events.forEach(record => {\n        const { event } = record;\n        if (event.section === "launch" && event.method === "NewLaunch") {\n          const sender = event.data[0].toString();\n          const robot = event.data[1].toString();\n          const parameter = event.data[2].toHuman();\n          this.log.push({\n            sender,\n            robot,\n            parameter\n          });\n        }\n      });\n    });\n  },\n  destroyed() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  },\n  methods: {\n    async launch() {\n      try {\n        this.error = "";\n        this.isWrite = true;\n        const tx = await this.api.tx.launch\n          .launch(this.robot, this.parameter === "ON")\n          .signAsync(this.account);\n        await tx.send(result => {\n          if (result.status.isInBlock) {\n            this.isWrite = false;\n          }\n        });\n      } catch (error) {\n        this.error = error.message;\n        this.isWrite = false;\n      }\n    }\n  }\n};\n<\/script>\n')])]),a("p",[a("a",{attrs:{href:"https://github.com/airalab/example-robonomics-dapp/blob/master/src/components/Launch.vue",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/example-robonomics-dapp/blob/master/src/components/Launch.vue")])]),a("p",[e._v("For display, add a new component to "),a("code",{pre:!0},[e._v("App.vue")])]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<template>\n...OTHER_CODE...\n\n  <div>\n    <div class="tabs">\n      <button\n        @click="tab = \'datalog\'"\n        :class="{ active: tab === \'datalog\' }"\n      >\n        datalog\n      </button>\n      <button\n        @click="tab = \'launch\'"\n        :class="{ active: tab === \'launch\' }"\n      >\n        launch\n      </button>\n    </div>\n    <Datalog v-if="tab === \'datalog\'" :api="api" :account="account" />\n    <Launch v-if="tab === \'launch\'" :api="api" :account="account" />\n  </div>\n\n...OTHER_CODE...\n</template>\n\n...OTHER_CODE...\n\n<script>\nimport Datalog from "./components/Datalog";\nimport Launch from "./components/Launch";\n\n...OTHER_CODE...\n\ncomponents: {\n  Datalog,\n  Launch\n},\n\n...OTHER_CODE...\n')])]),a("p",[e._v("Run app")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("yarn serve\n")])]),a("p",[e._v("Way 2:")]),a("p",[e._v("If you start the application with cloning the repository, then to complete these steps, you will just need to switch to step 5.")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("git checkout step-5\nyarn serve\n")])]),a("p",[e._v("As a result we will get this picture in the browser")]),a("p",[a("g-image",{attrs:{src:t("9TY6"),alt:"screen4"}})],1),a("h3",{attrs:{id:"step-6-demo"}},[a("a",{attrs:{href:"#step-6-demo","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),e._v("Step 6. Demo")]),a("p",[e._v("In this demo, we will have a car that can be started and stopped through the dApp. The car collects a log during the trip, and after stopping, saves it to the chain. Here we will use both modules, which we tried separately, in conjunction.")]),a("p",[e._v("To emulate the behavior of a robot (car), we will write a Robot class. We will use the "),a("code",{pre:!0},[e._v("Alice")]),e._v(" key as an account for this robot. The "),a("code",{pre:!0},[e._v("Robot")]),e._v(" class will watch for "),a("code",{pre:!0},[e._v("NewLaunch")]),e._v(" events to turn itself on and off. After turning on, it starts collecting data into the log, in terms of data it will be just a timestamp. And after shutdown, it saves this log to the "),a("code",{pre:!0},[e._v("datalog")]),e._v(" module.")]),a("p",[e._v("Way 1:")]),a("p",[e._v("Create file "),a("code",{pre:!0},[e._v("src/utils/robot.js")]),e._v(". The full code of the file "),a("a",{attrs:{href:"https://github.com/airalab/example-robonomics-dapp/blob/master/src/utils/robot.js",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/example-robonomics-dapp/blob/master/src/utils/robot.js")])]),a("p",[e._v("For visualization, we will create a "),a("code",{pre:!0},[e._v("Demo.vue")]),e._v(" component, where we will have a start button, car animation and log output.")]),a("p",[a("code",{pre:!0},[e._v("src/components/Demo.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<template>\n  <div>\n    <h2>Demo</h2>\n    <template v-if="robot">\n      <h3>Robot: {{ robot.address }}</h3>\n      <p v-if="robot.state">Driver: {{ robot.driver }}</p>\n      <button @click="run" :disabled="isWrite">\n        <template v-if="!robot.state">run</template>\n        <template v-else>stop</template>\n      </button>\n      <div class="road">\n        <div\n          class="robot"\n          :class="[robot.state ? \'robot-play\' : \'robot-stop\']"\n        ></div>\n      </div>\n      <div v-if="error" class="error">{{ error }}</div>\n      <div v-if="log" class="log">\n        <p v-if="log.length === 0" class="error">Not found</p>\n        <div v-for="(item, k) in log" :key="k" class="row">\n          <b>{{ item[0] | dateFormat }}</b>\n          <pre>{{ item[1] | dataFormat }}</pre>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n...OTHER_CODE...\n\n<style scoped>\n.log {\n  border: 1px solid #eee;\n  text-align: left;\n  width: 800px;\n  margin: 20px auto;\n  height: 500px;\n  overflow-y: auto;\n}\n.log .row {\n  margin: 10px;\n  border-bottom: 1px solid #eee;\n}\n.road {\n  width: 1000px;\n  margin: 20px auto;\n  background-color: #eee;\n  padding: 20px 0;\n  border: 5px solid #a5a5a5;\n  border-left: 0;\n  border-right: 0;\n  position: relative;\n}\n.road::before {\n  content: " ";\n  width: 1000px;\n  border-top: 5px dashed #a5a5a5;\n  position: absolute;\n  top: 50%;\n  left: 0;\n}\n@keyframes move {\n  from {\n    transform: translateX(0);\n  }\n  to {\n    transform: translateX(100%);\n  }\n}\n.robot {\n  height: 100px;\n  width: 100px;\n  color: #fff;\n  font-weight: bold;\n  font-style: 14px;\n  animation: move 30s linear infinite;\n  border-radius: 0 10px 10px 0;\n  background: url("../images/build-iot-dapps/car.png") no-repeat 0 0;\n  background-size: cover;\n}\n.robot-play {\n  animation-play-state: running;\n}\n.robot-stop {\n  animation-play-state: paused;\n}\n</style>\n')])]),a("p",[e._v("Component code. Here we need to create an instance of the "),a("code",{pre:!0},[e._v("Robot")]),e._v(" class and a launch/stop function.")]),a("p",[a("code",{pre:!0},[e._v("src/components/Demo.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('...OTHER_CODE...\n\n<script>\nimport { u8aToString } from "@polkadot/util";\nimport Robot from "../utils/robot";\n\nexport default {\n  props: ["api", "account"],\n  data() {\n    return {\n      isWrite: false,\n      error: "",\n      robot: null,\n      log: []\n    };\n  },\n  filters: {\n    dateFormat: function(v) {\n      return new Date(Number(v)).toLocaleString();\n    },\n    dataFormat: function(v) {\n      return JSON.parse(u8aToString(v));\n    }\n  },\n  async created() {\n    this.robot = new Robot("//Alice", this.api);\n    await this.robot.subscribeLog(r => {\n      this.log = r.reverse().map(item => {\n        return [item[0], item[1]];\n      });\n    });\n  },\n  destroyed() {\n    this.robot.destroy();\n  },\n  methods: {\n    async run() {\n      try {\n        this.error = "";\n        this.isWrite = true;\n        const tx = await this.api.tx.launch\n          .launch(this.robot.account.address, !this.robot.state)\n          .signAsync(this.account);\n        await tx.send(result => {\n          if (result.status.isInBlock) {\n            this.isWrite = false;\n          }\n        });\n      } catch (error) {\n        this.error = error.message;\n        this.isWrite = false;\n      }\n    }\n  }\n};\n<\/script>\n\n...OTHER_CODE...\n')])]),a("p",[a("a",{attrs:{href:"https://github.com/airalab/example-robonomics-dapp/blob/master/src/components/Demo.vue",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/example-robonomics-dapp/blob/master/src/components/Demo.vue")])]),a("p",[e._v("Let's add another picture of our car to "),a("code",{pre:!0},[e._v("src/images/build-iot-dapps/car.png")]),e._v(". Example "),a("a",{attrs:{href:"https://github.com/airalab/example-robonomics-dapp/blob/master/src/images/build-iot-dapps/car.png",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("https://github.com/airalab/example-robonomics-dapp/blob/master/src/images/build-iot-dapps/car.png")]),e._v(".")]),a("p",[e._v("For display, add a new component to "),a("code",{pre:!0},[e._v("App.vue")])]),a("p",[a("code",{pre:!0},[e._v("src/App.vue")])]),a("pre",[a("code",{pre:!0,attrs:{class:"language-js"}},[e._v('<template>\n\n...OTHER_CODE...\n\n  <div>\n    <div class="tabs">\n      <button\n        @click="tab = \'datalog\'"\n        :class="{ active: tab === \'datalog\' }"\n      >\n        datalog\n      </button>\n      <button\n        @click="tab = \'launch\'"\n        :class="{ active: tab === \'launch\' }"\n      >\n        launch\n      </button>\n      <button @click="tab = \'demo\'" :class="{ active: tab === \'demo\' }">\n        demo\n      </button>\n    </div>\n    <Datalog v-if="tab === \'datalog\'" :api="api" :account="account" />\n    <Launch v-if="tab === \'launch\'" :api="api" :account="account" />\n    <Demo v-if="tab === \'demo\'" :api="api" :account="account" />\n  </div>\n\n...OTHER_CODE...\n\n</template>\n\n...OTHER_CODE...\n\n<script>\nimport Datalog from "./components/Datalog";\nimport Launch from "./components/Launch";\nimport Demo from "./components/Demo";\n\n...OTHER_CODE...\n\ncomponents: {\n  Datalog,\n  Launch,\n  Demo\n},\n\n...OTHER_CODE...\n')])]),a("p",[e._v("Run app")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("yarn serve\n")])]),a("p",[e._v("Way 2:")]),a("p",[e._v("If you start the application with cloning the repository, then to complete these steps, you will just need to switch to step 6.")]),a("pre",[a("code",{pre:!0,attrs:{class:"language-sh"}},[e._v("git checkout step-6\nyarn serve\n")])]),a("p",[e._v("As a result we will get this picture in the browser")]),a("p",[a("g-image",{attrs:{src:t("jNoH"),alt:"screen5"}})],1),a("p",[e._v("This concludes our lesson.")]),a("p",[e._v("Thanks!")])])}),[],!1,null,null,null);"function"==typeof c&&c(b),"function"==typeof u&&u(b);n.default=b.exports},gSOe:function(e,n){e.exports={type:"image",mimeType:"image/png",src:"/assets/static/screen2.20935a1.96327ea97f5df892dfb874669dfb1265.png",size:{width:801,height:221},sizes:"(max-width: 801px) 100vw, 801px",srcset:["/assets/static/screen2.82a2fbd.96327ea97f5df892dfb874669dfb1265.png 480w","/assets/static/screen2.20935a1.96327ea97f5df892dfb874669dfb1265.png 801w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 801 221' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-4daf3d6f6bada75ccd893d372a6cd4a3'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-4daf3d6f6bada75ccd893d372a6cd4a3)' width='801' height='221' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAASCAIAAABkTU91AAAACXBIWXMAAAsSAAALEgHS3X78AAACz0lEQVRIx%2b1WW1PaQBT2x/eh05c%2bOdZxRkdUqIKES5AQSLgGEPDSqtV6qZ2qhNwvEAi5LF2ygNiqY2facZy6D2fOnj05m2/3%2b04yM3jhY%2bYVwAsHAACwHQdaZzRcZGHQ9hy45Lou8qCDpnBMJTwbAKCoutm3oAftQy/iuO701LZt0%2bxDQM97A8N37XT0N%2b/ng4lMdfdg8WNkiyrmKw26tE3mK6XabrbciBI0mS/HyHx9/zDHbF9cNU/PzgORpC8YjVNMubFPMXWY1rfs5wHQbuuLfiyEk8tBfMEfnvdtLKxtrgTjwTixtB5dCEQDYTyAJT6sbkbJ3EooxuwcVGuN2eX1NSy5uoG9m/O9nV2aWwl2TQtR8e8AAOC2FBhNwZC5g7EDRinuJM1bg/R2x2wBCOKERZ5IpncxDIPlZZYT9I6BNnXHpW%2b3AC%2b/C9nesCwL2Xsx/QrANHvdngl11rcs6LQ7hijJgqjIWrvb6/GipLc78NiMbo8XRJaXFFW7bnK8JENvGOEErW10jC5MFmVVlBWja3KCJKuarOqwoKyorCBpelvRdJYXOUGAFhZotnjYEjhBbLY4Qda8rTuSJF1fXXEc12qxTZZVVfUxAAjfxeVl4/Px0dfz/cMvn47Pvn3/geEpfySZKtWrjb0cU82W64XtvQhZCMUJX3gry9SgRmPpHJEtVeo7dLkB1Zmt7KSoXDBB4yQN46FEJp7JbSaoYm03jKfCqXy6WCFzDJGvpOhCIEZiBEXQRSxJhQnaj%2bFYqgAVf3RyrqpKhSmR6XQmkzk6OVUU5SkUAs64T7tTTBy2bdtB1%2bp4PlwfjLmONIIy4bOWd/WovUCn1zNdj9yOV9ojuouqTQ4OjL8SI80MBpADoijC47%2b5uWHZFsuyuq49CcDjn617gyiM1Px7/p3g1GQi1WnN/mk7%2biciBk%2bB/fD0jg8Gj3ek15%2b5VwD/O4CfWJ0XGBzSHQoAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}},jNoH:function(e,n){e.exports={type:"image",mimeType:"image/png",src:"/assets/static/screen5.69d4f9f.0ab55193ec84a47b1e949357a6256a42.png",size:{width:1103,height:923},sizes:"(max-width: 1103px) 100vw, 1103px",srcset:["/assets/static/screen5.82a2fbd.0ab55193ec84a47b1e949357a6256a42.png 480w","/assets/static/screen5.69d4f9f.0ab55193ec84a47b1e949357a6256a42.png 1103w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1103 923' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-9ec997d1df92f2b8b2b491a57c147dbd'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-9ec997d1df92f2b8b2b491a57c147dbd)' width='1103' height='923' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAA2CAIAAAD4cAhVAAAACXBIWXMAAAsSAAALEgHS3X78AAAHSklEQVRo3u1aS2/jyBH2r8k1WSBzWCC/ITkHAfJDcgxyyWUOAXIIZhfJ5rCzO5h4jN2N7ZnxjMcPyZIsWbJlWU9SFCW%2b329SpOR8JG1Z67U9a49ky0AKBN3qbjaruqq%2bqmp66XQWNB6PR7hGuJ1T0nmJfjw%2bG1o6vV8az3rBpZkwpOqGblqu59mOOxqP/GAYhuEwjHzf95If2Ho/CCRFc1wPbfQsigAwG9yXf3j97Pmrfz5/%2bXJ148sX33%2b39nblzda/vl35fn3jmx82ltffZ4uH2Xzx6bOvX3y39o%2bvX71afRtEo5koZOmjxp1a8%2bmUTU%2b1z4aw96pmMJwgKirN8oqmcaLM8qKm65yooF/TTUXVFMxhuHylRlD90/NlJy96MBMapSLNwj3SRYbDoef7MELPc8OPGdtNAuBhgqIJut/s0gzD7ORKO/lytdEplI9LR7W9YmVzN79TODg4buRKldxBdb9cPaq3sqXDdzu5YqW6sVvY3S8XKsc7%2beJuobxXqmSKh68/ZDZ3c9uFyvtM/u32XpPo4pHjRvuw1qT6TJvqtwlKlOVypZzLZo6qx67r3qyfpZvtx3W9xDW94TA0TMswbbgpLvzV45%2bW5bjBcGjZDnzV9Xw0FE03LNu0bM2IJ%2bjJHNuB93rYV8u24c2m7aRzfD9wsM%2be7zheGDt9gDdiDs/zg36fF4QgCO4uwK3igAMWPC8cDqMwDMCoaWLzohiMAt9zVd3kZVPWHMVweUnDdixWHAijSFWUbGb7P8vLy69W6vUGx3G1amV1bXV1fb1WOyEodu3Dwd%2b/eP7vb/%2bbOeiYdmoYCyMAwFTXdZZlejRNkiS4lySR5zmq10OPKAgMJ560%2b%2bXjzmG92yRZBIfHGolnTrMU4DzhiSMUy3Ir65tvtnNbe8UmQSVamn0iNBcNpPwhiWAFccCLkqwCu%2baRBd1OAECeDYTzfEQZgCCQFHYc%2bAEwE7iJX8DKBDpxixET2BpFURBjK2DR0QGati0pavqsZadY7KTTcRlWDLiu7zuuizf9fC19XIB0pcNaYytf%2brBXbJFUqVrPFEq5cnU7f/AhW0Dk2t2voP1mK5vdL6ORPzhCe%2b3d9ma2sL61h0BWPDrZzBTe7ext7hXXN3e3cqVssYLoVjyqofE%2bW9jNFze2c5iGp8q1VjQaz96ELhlwWgNMGpeMG8CaZgHT9cDZ5MRJrhwCRVFcVtyHD0zYnbx%2bOp8Bm4qitFotBNRJ8jwt5DTTpz8W/lZePi8YxUarqtZsNpFEhbPL/q8VAK7pxj46S7Jjt3fT%2b2xXBsRdCJDqC%2bpGBKUmhDaubpf6NOp%2b8gpXrjkYDCaOdKYBbJIKlaekqgb2L4oMx7noXBgCS4ZhTPzkTAAoWpZl6EHB3TC44j65sszVjhXHPetfGAI/EOOyAGcaUFXddaXMzp8///z3n/36T7/93Wl2R1cwoC%2buBtKWJEkkQcAJBiTJ/PEPzSe/8n7zxPzlL%2bgnn3FP/0LxTDcevLDp7jlN2vfWCUKOizB/2YQgA0K9LfCvX668%2bPKr8Olfvb89/eLZV/n3m6ahS5I8sSX5epqMXjfz5scvrXDd6BUmhHoKY7EV6bqo6TysKQgU3%2bfxgG6oi0TgE7XHNT5wbmXxBUFlWU/bi4xCP40D0zZHkt0riXo4ujoOINojvAVThNiMSaM4t4qQFyA1g98kx7Nxd/CgBN5uyoVS3SDdpxmWFWSGEzpUX9EMUVJ6A45muB7Dz69A%2bSnB4m/Ipq4VAFUJSdEENWh0yMOTFlgne3S90z1pEfUO9SmHgbelRqMBjLnujUvXH8tFw3lmkT%2bfkNLeRQAYOqo7PwguFTT3ufd3FyAtMlJnFSSFFyROkFAPI94NOEGUVdcPJuVV%2bmEmSu6nyVnvpU8yo2R0QvekgXQ2wIcasPSAoVnBD4aqbpSrDYblIAYrSF160O72qD5DD1gSLi/IvQHbJntJP93tDyh60O0zvT5Tb5Ntqg//oQbcfWkgPvX3TeuKE5F044GqYVrApl/HRihnY7eJ%2b%2bPb2Wh0riPc0HMH87u7AABcuEF6Wo8GuAB/tuMOw%2bgROHE6OwyHLZJqk1SfE2A/MIbKcaNB9HhRlmQ1GIYL7MQolJPwrMZHVwZswLLjcyvDshVVB/eirCy6ABc%2bMJ7LF9J5CnCO%2bkg7AKNATk6UAaO6YQJnJFWHcmZ%2bTDsXH0ASB1gkqL5uWrKiAjGbRLdJUDFW9hnHC2b1nWLeJjROY3MahpIDwBgrF1cDUzB6/u3Ni7%2bwA8hd9ESPH0aRWTwCGE323gdoyqoejcYwJ8hgxM6gQQBBkv1EgPH/YfR%2bYBTZaDCB0TSreQQwCrBpkb0ORevGGYw2CLLR6RIU3aUZx19sGPVgQvbFk1FS4qd4GiZ0q08pDwWjLviGIUGYUQL/cOtUjEcEoz3EXZrlNd1EZVOp1ZtJNgpoCsLFhlHsNOxEVjVJ1WAthmXF/4liWigpWUGMYTR4eBj9Hy2oFfw7X3/%2bAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"}}}]);