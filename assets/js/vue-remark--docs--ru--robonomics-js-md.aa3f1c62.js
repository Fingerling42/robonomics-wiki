(window.webpackJsonp=window.webpackJsonp||[]).push([[265],{UQSp:function(e,n,o){"use strict";n.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},yGII:function(e,n,o){"use strict";o.r(n);var s=o("KHd+"),t=o("UQSp"),a=o("Kw5r");function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}a.a.config.optionMergeStrategies;var i={VueRemarkRoot:t.a},c=function(e){var n=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===r(i[e])&&"function"==typeof i[e].render||"function"==typeof i[e]&&"function"==typeof i[e].options.render?n[e]=i[e]:o[e]=function(){return i[e]}}))},l=a.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",d={excerpt:null,title:"Robonomics-js",contributors:["Vourhey"],translated:!1};var h=function(e){e.options[p]&&(e.options[p]=d),a.a.util.defineReactive(e.options,p,d),e.options.computed=l.computed({$frontmatter:function(){return e.options[p]}},e.options.computed)},u=Object(s.a)({},(function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("VueRemarkRoot",[o("p",[o("a",{attrs:{href:"https://github.com/airalab/robonomics-js",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Robonomics-js")]),e._v(" is a simple Javascript library for working with Robonomics Network.")]),o("h2",{attrs:{id:"installation"}},[o("a",{attrs:{href:"#installation","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Installation")]),o("pre",[o("code",{pre:!0},[e._v("npm install robonomics-js --save\n")])]),o("p",[e._v("or")]),o("pre",[o("code",{pre:!0},[e._v("yarn add robonomics-js\n")])]),o("h3",{attrs:{id:"dependencies"}},[o("a",{attrs:{href:"#dependencies","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Dependencies")]),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/ethereum/web3.js/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Web3")]),e._v(" version 1.2.4")]),o("li",[o("a",{attrs:{href:"https://github.com/ipfs/js-ipfs",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Ipfs")]),e._v(" version 0.34.0")])]),o("h2",{attrs:{id:"usage"}},[o("a",{attrs:{href:"#usage","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Usage")]),o("p",[e._v("Creates a Robonomics instance")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("const options = {...};\nconst robonomics = new Robonomics(options);\n")])]),o("h3",{attrs:{id:"options"}},[o("a",{attrs:{href:"#options","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("options")]),o("p",[e._v("The object of properties:")]),o("pre",[o("code",{pre:!0},[e._v("options.web3\n")])]),o("p",[e._v("An instance of "),o("a",{attrs:{href:"https://github.com/ethereum/web3.js/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("web3.js")]),e._v(":")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v('// metamask\nconst options = {\n  web3: new Web3(window.ethereum),\n  ...\n};\n\n// infura\nconst options = {\n  web3: new Web3(\n    new Web3.providers.WebsocketProvider(\n      "wss://mainnet.infura.io/ws/v3/0b2f2a5026264b57b6d698b480332e89"\n    )\n  ),\n  ...\n};\n')])]),o("pre",[o("code",{pre:!0},[e._v("options.messageProvider\n")])]),o("p",[e._v("This is an instance of MessageProviderIpfs which uses a "),o("a",{attrs:{href:"https://github.com/ipfs/js-ipfs",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("js-ipfs")]),e._v(" node with pubsub support")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("const ipfs = new Ipfs({\n  repo: 'robonomics-example',\n  relay: {\n    enabled: true,\n    hop: {\n      enabled: true\n    }\n  },\n  EXPERIMENTAL: {\n    pubsub: true\n  },\n  config: {\n    Addresses: {\n      Swarm: [\n        '/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star',\n        '/dns4/1.wsstar.aira.life/tcp/443/wss/p2p-websocket-star/',\n        '/dns4/2.wsstar.aira.life/tcp/443/wss/p2p-websocket-star/',\n        '/dns4/3.wsstar.aira.life/tcp/443/wss/p2p-websocket-star/'\n      ]\n    },\n    Bootstrap: [\n      '/dns4/ams-1.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd',\n      '/dns4/lon-1.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3',\n      '/dns4/nyc-1.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm',\n      '/dns4/nyc-2.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64',\n      '/dns4/node0.preload.ipfs.io/tcp/443/wss/ipfs/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic',\n      '/dns4/node1.preload.ipfs.io/tcp/443/wss/ipfs/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6',\n      '/dns4/1.pubsub.aira.life/tcp/443/wss/ipfs/QmdfQmbmXt6sqjZyowxPUsmvBsgSGQjm4VXrV7WGy62dv8',\n      '/dns4/2.pubsub.aira.life/tcp/443/wss/ipfs/QmPTFt7GJ2MfDuVYwJJTULr6EnsQtGVp8ahYn9NSyoxmd9',\n      '/dns4/3.pubsub.aira.life/tcp/443/wss/ipfs/QmWZSKTEQQ985mnNzMqhGCrwQ1aTA6sxVsorsycQz9cQrw'\n    ]\n  }\n})\n\nconst options = {\n  messageProvider: new MessageProviderIpfs(ipfs),\n  ...\n};\n")])]),o("pre",[o("code",{pre:!0},[e._v("options.account\n")])]),o("p",[e._v("This is an account object which will be used to sign messages. It's necessary to specify either account address (that one must be unlocked) or a private key (the address will be recovered from the given private key).")]),o("p",[e._v("Option "),o("code",{pre:!0},[e._v("isSignPrefix")]),e._v(" tells whether or not a prefix must be appended. Default is "),o("code",{pre:!0},[e._v("true")]),e._v(".")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("const options = {\n  account: {\n    address: '0x0000000000000000000000000000000000000000',\n    privateKey: '0x0000000000000000000000000000000000000000000000000000',\n    isSignPrefix: true\n  },\n  ...\n};\n")])]),o("pre",[o("code",{pre:!0},[e._v("options.ens\n")])]),o("p",[e._v("This is a "),o("code",{pre:!0},[e._v("ens")]),e._v(" contract object. This one is not required. If it's necessary you may specify "),o("code",{pre:!0},[e._v("address")]),e._v(" of the contract if the network is not set to mainnet. "),o("code",{pre:!0},[e._v("suffix")]),e._v(" may be "),o("code",{pre:!0},[e._v("sid")]),e._v(" for sidechain or "),o("code",{pre:!0},[e._v("eth")]),e._v(" for mainnet. "),o("code",{pre:!0},[e._v("eth")]),e._v(" is default. "),o("code",{pre:!0},[e._v("version")]),e._v(" is the version of Robonomics Network. Default is the latest deployed version.")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("const options = {\n  ens: {\n    address: '0x314159265dD8dbb310642f98f50C066173C1259b',\n    suffix: 'eth',\n    version: 5\n  },\n  ...\n};\n")])]),o("pre",[o("code",{pre:!0},[e._v("options.lighthouse\n")])]),o("p",[e._v("ENS name of a lighthouse, not required. Default is "),o("code",{pre:!0},[e._v("airalab.lighthouse.5.robonomics.eth")]),e._v(". It's possible to specify only the first part of the name, like "),o("code",{pre:!0},[e._v("airalab")]),e._v(".")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("const options = {\n  lighthouse: 'airalab.lighthouse.5.robonomics.eth',\n  ...\n};\n")])]),o("p",[e._v("It's necessary to wait until full initialization")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("const options = {...};\nconst robonomics = new Robonomics(options);\nrobonomics.ready().then(() => {\n  console.log('Robonomics instance ready')\n})\n")])]),o("h2",{attrs:{id:"api"}},[o("a",{attrs:{href:"#api","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("API")]),o("h3",{attrs:{id:"messages"}},[o("a",{attrs:{href:"#messages","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Messages")]),o("h4",{attrs:{id:"demand"}},[o("a",{attrs:{href:"#demand","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Demand")]),o("p",[e._v("The message specification")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v('const demand = {\n  // REQUIRED\n  model: "QmSt69qQqGka1qwRRHbdmAWk4nCbsV1mqJwd8cWbEyhf1M",      // ipfs hash of the model \n  objective: "QmSt69qQqGka1qwRRHbdmAWk4nCbsV1mqJwd8cWbEyhf2M",  // ipfs hash of the objective\n  token: robonomics.xrt.address,                                // payment token address\n  cost: 1,                                                      // cost\n  deadline: 9999999,                                            // until which block demand is valid\n\n  // NOT REQUIRED \n  lighthouse: "0x0000000000000000000000000000000000000000",     // lighthouse address, by default the initialization address\n  validator: "0x0000000000000000000000000000000000000000",      // validator address if necessary\n  validatorFee: 0,                                              // validator fee \n  nonce: 1                                                      // index number \n};\n')])]),o("p",[o("code",{pre:!0},[e._v("robonomics.sendDemand")])]),o("p",[e._v("Signing and broadcasting the demand message. A liability is returned as promise")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.sendDemand(demand).then(liability => {\n  console.log(liability.address);\n});\n")])]),o("p",[o("code",{pre:!0},[e._v("robonomics.onDemand")])]),o("p",[e._v("Listens to demand messages with a defined model. If model is "),o("code",{pre:!0},[e._v("null")]),e._v(" returns any demand message.")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.onDemand(model, message => {\n  console.log(message);\n});\n")])]),o("h4",{attrs:{id:"offer"}},[o("a",{attrs:{href:"#offer","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Offer")]),o("p",[e._v("The message specification")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v('const offer = {\n  // REQUIRED \n  model: "QmSt69qQqGka1qwRRHbdmAWk4nCbsV1mqJwd8cWbEyhf1M",      // ipfs hash of the model \n  objective: "QmSt69qQqGka1qwRRHbdmAWk4nCbsV1mqJwd8cWbEyhf2M",  // ipfs hash of the objective\n  token: robonomics.xrt.address,                                // payment token address\n  cost: 1,                                                      // cost \n  deadline: 9999999,                                            // until which block demand is valid\n\n  // NOT REQUIRED\n  lighthouse: "0x0000000000000000000000000000000000000000",     // lighthouse address, by default the initialization address\n  lighthouseFee: 0,                                             // lighthouse fee\n  validator: "0x0000000000000000000000000000000000000000",      // validator address if necessary\n  nonce: 1                                                      // index number \n};\n')])]),o("p",[o("code",{pre:!0},[e._v("robonomics.sendOffer")])]),o("p",[e._v("Signs and broadcasts an offer message. A liability is returned as promise")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.sendOffer(offer).then(liability => {\n  console.log(liability.address);\n});\n")])]),o("p",[o("code",{pre:!0},[e._v("robonomics.onOffer")])]),o("p",[e._v("Listens to offer messages with a defined model. If model is "),o("code",{pre:!0},[e._v("null")]),e._v(" returns any offer message")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.onOffer(model, message => {\n  console.log(message);\n});\n")])]),o("h4",{attrs:{id:"result"}},[o("a",{attrs:{href:"#result","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Result")]),o("p",[e._v("The message specification")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v('const result = {\n  // REQUIRED \n  liability: "0x0000000000000000000000000000000000000000",  // liability contract address\n  success: true,                                            // status of the task\n  result: "QmWXk8D1Fh5XFJvBodcWbwgyw9htjc6FJg8qi1YYEoPnrg"  // ipfs hash of the rosbag log file\n};\n')])]),o("p",[o("code",{pre:!0},[e._v("robonomics.sendResult")])]),o("p",[e._v("Signs and broadcasts a result message")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v('robonomics.sendResult(result).then(() => {\n  console.log("ok");\n});\n')])]),o("p",[o("code",{pre:!0},[e._v("robonomics.onResult")])]),o("p",[e._v("Listens to result messages. These results may be not valid. Valid results are stored in a liability contract")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.onResult(result => {\n  console.log(result);\n});\n")])]),o("h3",{attrs:{id:"smart-contracts"}},[o("a",{attrs:{href:"#smart-contracts","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Smart Contracts")]),o("h4",{attrs:{id:"liability"}},[o("a",{attrs:{href:"#liability","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Liability")]),o("p",[o("code",{pre:!0},[e._v("liability.getInfo")])]),o("p",[e._v("Return a property object of the contract")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("liability.getInfo().then(data => {\n  console.log(data);\n  /*\n  {\n    model,\n    objective,\n    result,\n    token,\n    cost,\n    lighthouseFee,\n    validatorFee,\n    demandHash,\n    offerHash,\n    promisor,\n    promisee,\n    lighthouse,\n    validator,\n    isSuccess,\n    isFinalized\n  }\n  */\n});\n")])]),o("p",[o("code",{pre:!0},[e._v("liability.onResult")])]),o("p",[e._v("Waits until a liability is finished. Returns a result")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("liability.onResult().then(result => {\n  console.log(result);\n});\n")])]),o("h4",{attrs:{id:"lighthouse"}},[o("a",{attrs:{href:"#lighthouse","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Lighthouse")]),o("p",[o("code",{pre:!0},[e._v("robonomics.lighthouse.getInfo")])]),o("p",[e._v("Returns a property object of the contract")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.lighthouse.getInfo().then(data => {\n  console.log(data);\n  /*\n  {\n    minimalStake,\n    timeoutInBlocks,\n    keepAliveBlock,\n    marker,\n    quota\n  }\n  */\n});\n")])]),o("p",[o("code",{pre:!0},[e._v("robonomics.lighthouse.getProviders")])]),o("p",[e._v("Returns a list of providers on the lighthouse")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.lighthouse.getProviders().then(list => {\n  console.log(list);\n});\n")])]),o("h5",{attrs:{id:"creation-of-a-new-lighthouse"}},[o("a",{attrs:{href:"#creation-of-a-new-lighthouse","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Creation of a new lighthouse")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("const minimalFreeze = 1000      // Wn\nconst timeout = 25              // blocks\nconst name = 'mylighthouse'     // lighthouse name\nrobonomics.factory.methods.createLighthouse(minimalFreeze, timeout, name).send({ from: robonomics.account.address })\n    .then((tx) => console.log(tx))\n\nrobonomics.factory.onLighthouse((lighthouse) => {\n    console.log(lighthouse.name)\n})\n")])]),o("h5",{attrs:{id:"become-a-provider"}},[o("a",{attrs:{href:"#become-a-provider","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Become a provider")]),o("p",[e._v("Preliminarily you must call "),o("code",{pre:!0},[e._v("approve")]),e._v(" for the tokens "),o("code",{pre:!0},[e._v("XRT")])]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v('const name = "mylighthouse";    // lighthouse name\nconst stake = 1000;             // Wn\nrobonomics.lighthouse.methods\n  .refill(stake)\n  .send({ from: robonomics.account.address })\n  .then(tx => console.log(tx));\n')])]),o("h4",{attrs:{id:"token"}},[o("a",{attrs:{href:"#token","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Token")]),o("p",[o("code",{pre:!0},[e._v("robonomics.xrt.getInfo")])]),o("p",[e._v("Returns property object of the token")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.xrt.getInfo().then(data => {\n  console.log(data);\n  /*\n  {\n    name,\n    totalSupply,\n    decimals,\n    symbol\n  }\n  */\n});\n")])]),o("h5",{attrs:{id:"check-balance"}},[o("a",{attrs:{href:"#check-balance","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Check balance")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.xrt.methods\n  .balanceOf(robonomics.account.address)\n  .call()\n  .then(balance => console.log(balance));\n")])]),o("h5",{attrs:{id:"check-allowance"}},[o("a",{attrs:{href:"#check-allowance","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Check allowance")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.xrt.methods\n  .allowance(robonomics.account.address, robonomics.factory.address)\n  .call()\n  .then(allowance => console.log(allowance));\n")])]),o("h5",{attrs:{id:"approve"}},[o("a",{attrs:{href:"#approve","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Approve")]),o("pre",[o("code",{pre:!0,attrs:{class:"language-JavaScript"}},[e._v("robonomics.xrt.methods\n  .approve(robonomics.lighthouse.address, 100)\n  .send({\n    from: robonomics.account.address\n  })\n  .then(tx => console.log(tx));\n")])]),o("h2",{attrs:{id:"links"}},[o("a",{attrs:{href:"#links","aria-hidden":"true"}},[o("span",{staticClass:"icon icon-link"})]),e._v("Links")]),o("ul",[o("li",[o("a",{attrs:{href:"https://robonomics.network/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Website")])]),o("li",[o("a",{attrs:{href:"https://github.com/airalab/vue-dapp-robonomics-template",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Minimal template of dApp")])]),o("li",[o("a",{attrs:{href:"https://codesandbox.io/s/robonomics-vue-template-ewuiw",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("dApp example")])])])])}),[],!1,null,null,null);"function"==typeof c&&c(u),"function"==typeof h&&h(u);n.default=u.exports}}]);